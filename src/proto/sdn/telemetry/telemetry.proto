syntax = "proto3";

option go_package = "github.com/Fl0k3n/k8s-inc/proto/sdn/telemetry";

package telemetry;

service TelemetryService {
    rpc ConfigureTelemetry(ConfigureTelemetryRequest) returns (ConfigureTelemetryResponse) {}
    rpc DisableTelemetry(DisableTelemetryRequest) returns (DisableTelemetryResponse) {}
}

message ConfigureTelemetryRequest {
    string intentId = 1;
    string collectionId = 2;
    string collectorNodeName = 3;
    int32 collectorPort = 4;
    oneof sources {
        RawTelemetryEntities rawSources = 5;
        TunneledTelemetryEntities tunneledSources = 6;
    }
    oneof targets {
        RawTelemetryEntities rawTargets = 7;
        TunneledTelemetryEntities tunneledTargets = 8;
    }
}

message TunneledTelemetryEntities {
    map<string, TunneledEntities> deviceNamesWithEntities = 1;
}

message TunneledEntities {
    repeated TunneledEntity entities = 1;
}

message TunneledEntity {
    string tunneledIp = 1;
    optional int32 port = 2; // not present means any port
}

message RawTelemetryEntities {
    repeated RawTelemetryEntity entities = 1;
}

message RawTelemetryEntity {
    string deviceName = 1;
    optional int32 port = 2; // not present means any port
}

enum TelemetryState {
    OK = 0;
    IN_PROGRESS = 1;
    FAILED = 2;
}

message ConfigureTelemetryResponse {
    TelemetryState telemetryState = 1;
    optional string description = 2;
}

message DisableTelemetryRequest {
    string intentId = 1;
}


message DisableTelemetryResponse {
    bool shouldRetryLater = 1;
}
