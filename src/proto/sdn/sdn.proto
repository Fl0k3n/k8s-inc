syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "github.com/Fl0k3n/k8s-inc/proto/sdn";

package sdn;

service SdnFrontend {
    rpc GetTopology(google.protobuf.Empty) returns (TopologyResponse) {}
    rpc GetSwitchDetails(SwitchNames) returns (SwitchDetailsResponse) {}
    rpc GetProgramDetails(ProgramDetailsRequest) returns (ProgramDetailsResponse) {}
    rpc SubscribeNetworkChanges(google.protobuf.Empty) returns (stream NetworkChange) {} 
}

message Link {
    string peerName = 1;
}

enum DeviceType {
    HOST = 0;
    INC_SWITCH = 1;
    NET = 2;
    EXTERNAL = 3;
}

message Device {
    string name = 1;
    DeviceType deviceType = 2;
    repeated Link links = 3;
    int32 index = 4;
}

message TopologyResponse {
    repeated Device graph = 1;
}

message SwitchNames {
    repeated string names = 1;
}

message SwitchDetails {
   string name = 1; 
   string arch = 2;
   string installedProgram = 3;
}

message SwitchDetailsResponse {
    map<string, SwitchDetails> details = 1;
}

message ProgramDetailsRequest {
    string programName = 1;
}

message ProgramDetailsResponse {
    repeated string implementedInterfaces = 2; 
}

// message UpdatedDevice {
//     Device previousState = 1;
//     Device updatedState = 2;
// }

message TopologyChange {
    // repeated Device addedDevices = 1;
    // repeated Device removedDevices = 2;
    // repeated UpdatedDevice updatedDevices = 3;
}

message ProgramChange {
    // string programName = 1;
    // repeated string implementedInterfaces = 2;
}

message DeviceStateChange {
    // SwitchDetails oldDetails = 1;
    // SwitchDetails newDetails = 2;
}

message NetworkChange {
    oneof change {
        TopologyChange topologyChange = 1;
        ProgramChange programChange = 2;
        DeviceStateChange deviceStateChange = 3;
    }
}
