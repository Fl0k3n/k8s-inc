syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "github.com/Fl0k3n/k8s-inc/proto/sdn";

package sdn;

service SdnFrontend {
    rpc GetTopology(google.protobuf.Empty) returns (TopologyResponse) {}
    rpc GetSwitchDetails(SwitchNames) returns (SwitchDetailsResponse) {}
    rpc GetProgramDetails(ProgramDetailsRequest) returns (ProgramDetailsResponse) {}

    // k8s should be able to setup hooks for various changes and update etcd if needed
    // this is more of a mock, we won't need anything like this in this local env
    // rpc SubscribeTopologyChanges(google.protobuf.Empty) returns (stream TopologyUpdate) {} 
}

message Link {
    string peerName = 1;
}

enum DeviceType {
    HOST = 0;
    INC_SWITCH = 1;
    NET = 2;
    EXTERNAL = 3;
}

message Device {
    string name = 1;
    DeviceType deviceType = 2;
    repeated Link links = 3;
}

message TopologyResponse {
    repeated Device graph = 1;
}

message SwitchNames {
    repeated string names = 1;
}

message SwitchDetails {
   string name = 1; 
   string arch = 2;
   string installedProgram = 3;
}

message SwitchDetailsResponse {
    map<string, SwitchDetails> details = 1;
}

message ProgramDetailsRequest {
    string programName = 1;
}

message ProgramDetailsResponse {
    repeated string implementedInterfaces = 2; 
}
