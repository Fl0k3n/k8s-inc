// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: sdn/telemetry/telemetry.proto

package telemetry

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TelemetryState int32

const (
	TelemetryState_OK          TelemetryState = 0
	TelemetryState_IN_PROGRESS TelemetryState = 1
	TelemetryState_FAILED      TelemetryState = 2
)

// Enum value maps for TelemetryState.
var (
	TelemetryState_name = map[int32]string{
		0: "OK",
		1: "IN_PROGRESS",
		2: "FAILED",
	}
	TelemetryState_value = map[string]int32{
		"OK":          0,
		"IN_PROGRESS": 1,
		"FAILED":      2,
	}
)

func (x TelemetryState) Enum() *TelemetryState {
	p := new(TelemetryState)
	*p = x
	return p
}

func (x TelemetryState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TelemetryState) Descriptor() protoreflect.EnumDescriptor {
	return file_sdn_telemetry_telemetry_proto_enumTypes[0].Descriptor()
}

func (TelemetryState) Type() protoreflect.EnumType {
	return &file_sdn_telemetry_telemetry_proto_enumTypes[0]
}

func (x TelemetryState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TelemetryState.Descriptor instead.
func (TelemetryState) EnumDescriptor() ([]byte, []int) {
	return file_sdn_telemetry_telemetry_proto_rawDescGZIP(), []int{0}
}

type EnableTelemetryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramName       string `protobuf:"bytes,1,opt,name=programName,proto3" json:"programName,omitempty"`
	CollectionId      string `protobuf:"bytes,2,opt,name=collectionId,proto3" json:"collectionId,omitempty"`
	CollectorNodeName string `protobuf:"bytes,3,opt,name=collectorNodeName,proto3" json:"collectorNodeName,omitempty"`
	CollectorPort     int32  `protobuf:"varint,4,opt,name=collectorPort,proto3" json:"collectorPort,omitempty"`
	// Types that are assignable to Sources:
	//
	//	*EnableTelemetryRequest_RawSources
	//	*EnableTelemetryRequest_TunneledSources
	Sources isEnableTelemetryRequest_Sources `protobuf_oneof:"sources"`
	// Types that are assignable to Targets:
	//
	//	*EnableTelemetryRequest_RawTargets
	//	*EnableTelemetryRequest_TunneledTargets
	Targets isEnableTelemetryRequest_Targets `protobuf_oneof:"targets"`
}

func (x *EnableTelemetryRequest) Reset() {
	*x = EnableTelemetryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_telemetry_telemetry_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableTelemetryRequest) ProtoMessage() {}

func (x *EnableTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_telemetry_telemetry_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableTelemetryRequest.ProtoReflect.Descriptor instead.
func (*EnableTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_sdn_telemetry_telemetry_proto_rawDescGZIP(), []int{0}
}

func (x *EnableTelemetryRequest) GetProgramName() string {
	if x != nil {
		return x.ProgramName
	}
	return ""
}

func (x *EnableTelemetryRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *EnableTelemetryRequest) GetCollectorNodeName() string {
	if x != nil {
		return x.CollectorNodeName
	}
	return ""
}

func (x *EnableTelemetryRequest) GetCollectorPort() int32 {
	if x != nil {
		return x.CollectorPort
	}
	return 0
}

func (m *EnableTelemetryRequest) GetSources() isEnableTelemetryRequest_Sources {
	if m != nil {
		return m.Sources
	}
	return nil
}

func (x *EnableTelemetryRequest) GetRawSources() *RawTelemetryEntities {
	if x, ok := x.GetSources().(*EnableTelemetryRequest_RawSources); ok {
		return x.RawSources
	}
	return nil
}

func (x *EnableTelemetryRequest) GetTunneledSources() *TunneledTelemetryEntities {
	if x, ok := x.GetSources().(*EnableTelemetryRequest_TunneledSources); ok {
		return x.TunneledSources
	}
	return nil
}

func (m *EnableTelemetryRequest) GetTargets() isEnableTelemetryRequest_Targets {
	if m != nil {
		return m.Targets
	}
	return nil
}

func (x *EnableTelemetryRequest) GetRawTargets() *RawTelemetryEntities {
	if x, ok := x.GetTargets().(*EnableTelemetryRequest_RawTargets); ok {
		return x.RawTargets
	}
	return nil
}

func (x *EnableTelemetryRequest) GetTunneledTargets() *TunneledTelemetryEntities {
	if x, ok := x.GetTargets().(*EnableTelemetryRequest_TunneledTargets); ok {
		return x.TunneledTargets
	}
	return nil
}

type isEnableTelemetryRequest_Sources interface {
	isEnableTelemetryRequest_Sources()
}

type EnableTelemetryRequest_RawSources struct {
	RawSources *RawTelemetryEntities `protobuf:"bytes,5,opt,name=rawSources,proto3,oneof"`
}

type EnableTelemetryRequest_TunneledSources struct {
	TunneledSources *TunneledTelemetryEntities `protobuf:"bytes,6,opt,name=tunneledSources,proto3,oneof"`
}

func (*EnableTelemetryRequest_RawSources) isEnableTelemetryRequest_Sources() {}

func (*EnableTelemetryRequest_TunneledSources) isEnableTelemetryRequest_Sources() {}

type isEnableTelemetryRequest_Targets interface {
	isEnableTelemetryRequest_Targets()
}

type EnableTelemetryRequest_RawTargets struct {
	RawTargets *RawTelemetryEntities `protobuf:"bytes,7,opt,name=rawTargets,proto3,oneof"`
}

type EnableTelemetryRequest_TunneledTargets struct {
	TunneledTargets *TunneledTelemetryEntities `protobuf:"bytes,8,opt,name=tunneledTargets,proto3,oneof"`
}

func (*EnableTelemetryRequest_RawTargets) isEnableTelemetryRequest_Targets() {}

func (*EnableTelemetryRequest_TunneledTargets) isEnableTelemetryRequest_Targets() {}

type TunneledTelemetryEntities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceNamesWithEntities map[string]*TunneledEntity `protobuf:"bytes,1,rep,name=deviceNamesWithEntities,proto3" json:"deviceNamesWithEntities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TunneledTelemetryEntities) Reset() {
	*x = TunneledTelemetryEntities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_telemetry_telemetry_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunneledTelemetryEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunneledTelemetryEntities) ProtoMessage() {}

func (x *TunneledTelemetryEntities) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_telemetry_telemetry_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunneledTelemetryEntities.ProtoReflect.Descriptor instead.
func (*TunneledTelemetryEntities) Descriptor() ([]byte, []int) {
	return file_sdn_telemetry_telemetry_proto_rawDescGZIP(), []int{1}
}

func (x *TunneledTelemetryEntities) GetDeviceNamesWithEntities() map[string]*TunneledEntity {
	if x != nil {
		return x.DeviceNamesWithEntities
	}
	return nil
}

type TunneledEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ipv4 string `protobuf:"bytes,1,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
}

func (x *TunneledEntity) Reset() {
	*x = TunneledEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_telemetry_telemetry_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TunneledEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TunneledEntity) ProtoMessage() {}

func (x *TunneledEntity) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_telemetry_telemetry_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TunneledEntity.ProtoReflect.Descriptor instead.
func (*TunneledEntity) Descriptor() ([]byte, []int) {
	return file_sdn_telemetry_telemetry_proto_rawDescGZIP(), []int{2}
}

func (x *TunneledEntity) GetIpv4() string {
	if x != nil {
		return x.Ipv4
	}
	return ""
}

type RawTelemetryEntities struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceNames []string `protobuf:"bytes,1,rep,name=deviceNames,proto3" json:"deviceNames,omitempty"`
}

func (x *RawTelemetryEntities) Reset() {
	*x = RawTelemetryEntities{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_telemetry_telemetry_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RawTelemetryEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RawTelemetryEntities) ProtoMessage() {}

func (x *RawTelemetryEntities) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_telemetry_telemetry_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RawTelemetryEntities.ProtoReflect.Descriptor instead.
func (*RawTelemetryEntities) Descriptor() ([]byte, []int) {
	return file_sdn_telemetry_telemetry_proto_rawDescGZIP(), []int{3}
}

func (x *RawTelemetryEntities) GetDeviceNames() []string {
	if x != nil {
		return x.DeviceNames
	}
	return nil
}

type EnableTelemetryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TelemetryState TelemetryState `protobuf:"varint,1,opt,name=telemetryState,proto3,enum=telemetry.TelemetryState" json:"telemetryState,omitempty"`
	Description    *string        `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *EnableTelemetryResponse) Reset() {
	*x = EnableTelemetryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sdn_telemetry_telemetry_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableTelemetryResponse) ProtoMessage() {}

func (x *EnableTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sdn_telemetry_telemetry_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableTelemetryResponse.ProtoReflect.Descriptor instead.
func (*EnableTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_sdn_telemetry_telemetry_proto_rawDescGZIP(), []int{4}
}

func (x *EnableTelemetryResponse) GetTelemetryState() TelemetryState {
	if x != nil {
		return x.TelemetryState
	}
	return TelemetryState_OK
}

func (x *EnableTelemetryResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

var File_sdn_telemetry_telemetry_proto protoreflect.FileDescriptor

var file_sdn_telemetry_telemetry_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x73, 0x64, 0x6e, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2f,
	0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x22, 0xf2, 0x03, 0x0a, 0x16, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x41, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e,
	0x52, 0x61, 0x77, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x64, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x64,
	0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x64, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x72, 0x61, 0x77, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x2e, 0x52, 0x61, 0x77, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x01, 0x52, 0x0a, 0x72, 0x61, 0x77,
	0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x74, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x75, 0x6e,
	0x6e, 0x65, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x48, 0x01, 0x52, 0x0f, 0x74, 0x75, 0x6e, 0x6e, 0x65, 0x6c,
	0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x22,
	0xff, 0x01, 0x0a, 0x19, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x64, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x7b, 0x0a,
	0x17, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65,
	0x6c, 0x65, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x17, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x65, 0x0a, 0x1c, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x24, 0x0a, 0x0e, 0x54, 0x75, 0x6e, 0x6e, 0x65, 0x6c, 0x65, 0x64, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x76, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x22, 0x38, 0x0a, 0x14, 0x52, 0x61, 0x77, 0x54, 0x65,
	0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x17, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a,
	0x0e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x35, 0x0a, 0x0e, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x32, 0x6e,
	0x0a, 0x10, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x6d, 0x65, 0x74, 0x72, 0x79, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2f,
	0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x46, 0x6c, 0x30,
	0x6b, 0x33, 0x6e, 0x2f, 0x6b, 0x38, 0x73, 0x2d, 0x69, 0x6e, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x73, 0x64, 0x6e, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sdn_telemetry_telemetry_proto_rawDescOnce sync.Once
	file_sdn_telemetry_telemetry_proto_rawDescData = file_sdn_telemetry_telemetry_proto_rawDesc
)

func file_sdn_telemetry_telemetry_proto_rawDescGZIP() []byte {
	file_sdn_telemetry_telemetry_proto_rawDescOnce.Do(func() {
		file_sdn_telemetry_telemetry_proto_rawDescData = protoimpl.X.CompressGZIP(file_sdn_telemetry_telemetry_proto_rawDescData)
	})
	return file_sdn_telemetry_telemetry_proto_rawDescData
}

var file_sdn_telemetry_telemetry_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sdn_telemetry_telemetry_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_sdn_telemetry_telemetry_proto_goTypes = []interface{}{
	(TelemetryState)(0),               // 0: telemetry.TelemetryState
	(*EnableTelemetryRequest)(nil),    // 1: telemetry.EnableTelemetryRequest
	(*TunneledTelemetryEntities)(nil), // 2: telemetry.TunneledTelemetryEntities
	(*TunneledEntity)(nil),            // 3: telemetry.TunneledEntity
	(*RawTelemetryEntities)(nil),      // 4: telemetry.RawTelemetryEntities
	(*EnableTelemetryResponse)(nil),   // 5: telemetry.EnableTelemetryResponse
	nil,                               // 6: telemetry.TunneledTelemetryEntities.DeviceNamesWithEntitiesEntry
}
var file_sdn_telemetry_telemetry_proto_depIdxs = []int32{
	4, // 0: telemetry.EnableTelemetryRequest.rawSources:type_name -> telemetry.RawTelemetryEntities
	2, // 1: telemetry.EnableTelemetryRequest.tunneledSources:type_name -> telemetry.TunneledTelemetryEntities
	4, // 2: telemetry.EnableTelemetryRequest.rawTargets:type_name -> telemetry.RawTelemetryEntities
	2, // 3: telemetry.EnableTelemetryRequest.tunneledTargets:type_name -> telemetry.TunneledTelemetryEntities
	6, // 4: telemetry.TunneledTelemetryEntities.deviceNamesWithEntities:type_name -> telemetry.TunneledTelemetryEntities.DeviceNamesWithEntitiesEntry
	0, // 5: telemetry.EnableTelemetryResponse.telemetryState:type_name -> telemetry.TelemetryState
	3, // 6: telemetry.TunneledTelemetryEntities.DeviceNamesWithEntitiesEntry.value:type_name -> telemetry.TunneledEntity
	1, // 7: telemetry.TelemetryService.EnableTelemetry:input_type -> telemetry.EnableTelemetryRequest
	5, // 8: telemetry.TelemetryService.EnableTelemetry:output_type -> telemetry.EnableTelemetryResponse
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_sdn_telemetry_telemetry_proto_init() }
func file_sdn_telemetry_telemetry_proto_init() {
	if File_sdn_telemetry_telemetry_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sdn_telemetry_telemetry_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableTelemetryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_telemetry_telemetry_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunneledTelemetryEntities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_telemetry_telemetry_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TunneledEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_telemetry_telemetry_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RawTelemetryEntities); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sdn_telemetry_telemetry_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableTelemetryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sdn_telemetry_telemetry_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*EnableTelemetryRequest_RawSources)(nil),
		(*EnableTelemetryRequest_TunneledSources)(nil),
		(*EnableTelemetryRequest_RawTargets)(nil),
		(*EnableTelemetryRequest_TunneledTargets)(nil),
	}
	file_sdn_telemetry_telemetry_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sdn_telemetry_telemetry_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sdn_telemetry_telemetry_proto_goTypes,
		DependencyIndexes: file_sdn_telemetry_telemetry_proto_depIdxs,
		EnumInfos:         file_sdn_telemetry_telemetry_proto_enumTypes,
		MessageInfos:      file_sdn_telemetry_telemetry_proto_msgTypes,
	}.Build()
	File_sdn_telemetry_telemetry_proto = out.File
	file_sdn_telemetry_telemetry_proto_rawDesc = nil
	file_sdn_telemetry_telemetry_proto_goTypes = nil
	file_sdn_telemetry_telemetry_proto_depIdxs = nil
}
