apiVersion: inc.example.com/v1alpha1
kind: TableConfig
metadata:
  name: myTableConfig
spec:
  tables:
    table1:
      entries:
        - match: ...
          action: ...
        - match: ...
          action: ...
    table2:
      entries:
        - match: ...
          action: ...
# it's a terrible idea to keep it in etcd, etcd doesn't delete entries it versions them
# every such yaml would be big and would be changed often which could result in huge etcd overload
# etcd max value size is about 1.5MB by default, which would work fine for 10k's of entries

# assumption: to maintain l3-l2-tunnelling etc configuration each program must have same tables and actions for those things (same keys, same names etc)
---
# alternative idea:
apiVersion: inc.example.com/v1alpha1
kind: TableConfig
metadata:
  name: myTableConfig
spec:
  latestKey: abc
  appliedKey: xyz
# where key points to entries stored somewhere else, when we change entries we update latestKey
# controller on notification checks if latestKey != appliedKey, and if so:
# - it fetches difference from that external location
# - applies it to device
# - sets appliedKey = latestKey

# such external location could be mongodb
# for now let's stick to the simpler option 1, we can always change it transparently (probably)
